/**
 * FAQ LIGHT - ACCORDION PURO CSS (SENZA JAVASCRIPT)
 * ================================================
 * 
 * SCOPO EDUCATIVO: Questo CSS implementa un accordion completamente funzionale
 * usando SOLO CSS, senza bisogno di JavaScript. La tecnica si basa su:
 * 1. INPUT CHECKBOX/RADIO nascosti per lo stato
 * 2. LABEL come pulsanti cliccabili
 * 3. SELETTORE :checked per rilevare lo stato attivo
 * 4. SELETTORE ~ (sibling) per collegare stato e contenuto
 * 5. MAX-HEIGHT per animazioni di apertura/chiusura
 * 
 * CONCETTI CSS AVANZATI IMPARATI:
 * - :checked pseudo-class per stato toggle
 * - Selettori di adiacenza (+ e ~)
 * - max-height animations per content reveal
 * - Transform per rotazioni icone
 * - Pseudo-elementi ::before per contenuto dinamico
 * - Focus-within per accessibilità avanzata
 * - CSS-only interaction patterns
 */

/* ========================================
   CONTAINER PRINCIPALE FAQ
   ======================================== */
.faq-light {
    margin: 2rem 0;
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden; /* Nasconde contenuto che fuoriesce durante animazioni */
}

/* ========================================
   TITOLO PRINCIPALE DEL BLOCCO FAQ
   ======================================== */
.faq-light__title {
    margin: 0 0 1.5rem 0;
    padding: 1.5rem 1.5rem 0 1.5rem;
    font-size: 1.75rem;
    font-weight: 600;
    color: #1e1e1e;
    line-height: 1.3;
}

/* ========================================
   CONTAINER DEGLI ITEM FAQ
   ======================================== */
.faq-light__container {
    border-top: 1px solid #e0e0e0; /* Separatore visivo dal titolo */
}

/* ========================================
   SINGOLO ITEM FAQ
   ======================================== */
.faq-light__item {
    border-bottom: 1px solid #e0e0e0; /* Separatore tra item */
}

.faq-light__item:last-child {
    border-bottom: none; /* Rimuove bordo dall'ultimo item */
}

/* ========================================
   ELEMENTO CHIAVE: CHECKBOX/RADIO NASCOSTO
   ======================================== */
/* TECNICA CSS-ONLY: Usa un input invisibile per mantenere lo stato */
.faq-light__toggle {
    display: none; /* NASCOSTO ma funzionale per :checked */
    /* 
    SPIEGAZIONE PER STUDENTI:
    - L'input è nascosto ma rimane nel DOM
    - Quando l'utente clicca sulla <label>, l'input cambia stato
    - CSS può rilevare questo cambio con :checked
    - Così otteniamo interattività senza JavaScript!
    */
}

/* ========================================
   PULSANTE DOMANDA (LABEL INTERATTIVA)
   ======================================== */
/* TECNICA CHIAVE: <label> collegata all'input nascosto */
.faq-light__question {
    width: calc(100% - 3rem); /* Spazio per possibili decorazioni */
    background: none;
    border: none;
    padding: 1.5rem;
    cursor: pointer; /* Indica che è cliccabile */
    display: flex;
    align-items: center;
    justify-content: space-between; /* Testo a sinistra, icona a destra */
    transition: background-color 0.2s ease;
    position: relative;
    /*
    SPIEGAZIONE PER STUDENTI:
    - Questo è un <label> associato all'input nascosto
    - Quando clicchi sulla label, l'input associato cambia stato
    - È il trucco fondamentale per l'accordion CSS-only!
    */
}

/* ========================================
   HOVER EFFECT PER FEEDBACK VISIVO
   ======================================== */
.faq-light__question:hover {
    background-color: #f8f9fa; /* Feedback visivo al passaggio del mouse */
}

/* ========================================
   TESTO DELLA DOMANDA
   ======================================== */
.faq-light__question-text {
    font-size: 1.125rem;
    font-weight: 500;
    color: #1e1e1e;
    line-height: 1.4;
    padding-right: 1rem; /* Spazio dall'icona */
}

/* ========================================
   ICONA EXPAND/COLLAPSE (+ / -)
   ======================================== */
/* TECNICA AVANZATA: Contenuto dinamico con ::before */
.faq-light__icon {
    font-size: 0; /* Nasconde eventuale contenuto HTML testuale */
    font-weight: bold;
    color: #007cba;
    transition: transform 0.3s ease; /* Animazione di rotazione */
    flex-shrink: 0; /* Non si riduce mai */
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%; /* Cerchio perfetto */
    background-color: rgba(0, 124, 186, 0.1); /* Sfondo semi-trasparente */
}

/* ========================================
   PSEUDO-ELEMENTO PER SIMBOLO "+"
   ======================================== */
.faq-light__icon::before {
    content: "+"; /* CONTENUTO GENERATO DA CSS */
    font-size: 1.5rem;
    /*
    SPIEGAZIONE PER STUDENTI:
    - ::before crea contenuto che non esiste nell'HTML
    - Questo simbolo "+" viene generato puramente dal CSS
    - Cambierà dinamicamente in base allo stato :checked
    */
}

/* ========================================
   MAGIA CSS: STATO ATTIVO (:checked)
   ======================================== */
/* SELETTORE AVANZATO: :checked + (adiacente) */
.faq-light__toggle:checked + .faq-light__question .faq-light__icon {
    transform: rotate(180deg); /* Rotazione per feedback visivo */
    background-color: #007cba; /* Colore attivo */
    color: #ffffff;
    /*
    SPIEGAZIONE SELETTORE PER STUDENTI:
    - .faq-light__toggle:checked = quando il checkbox è spuntato
    - + = selettore di elemento IMMEDIATAMENTE adiacente
    - .faq-light__question = la label che segue il checkbox
    - .faq-light__icon = l'icona dentro la label
    
    SEQUENZA DOM: <input><label><span class="icon"></span></label>
    Il CSS può "salire" dalla label all'icona interna!
    */
}

/* ========================================
   CAMBIO DINAMICO DEL CONTENUTO
   ======================================== */
.faq-light__toggle:checked + .faq-light__question .faq-light__icon::before {
    content: "−"; /* DA "+" DIVENTA "−" quando attivo! */
    /*
    TECNICA AVANZATA PER STUDENTI:
    - Stesso selettore ma targetta il ::before
    - Cambia il CONTENUTO generato dal CSS
    - Nessun JavaScript necessario per questo cambio!
    */
}

/* ========================================
   CONTENITORE RISPOSTA (COLLAPSIBLE)
   ======================================== */
/* TECNICA ANIMAZIONE: max-height per slide effect */
.faq-light__answer {
    max-height: 0; /* NASCOSTO: altezza zero */
    overflow: hidden; /* Nasconde contenuto che eccede */
    transition: max-height 0.4s ease; /* Animazione fluida */
    /*
    SPIEGAZIONE TECNICA PER STUDENTI:
    - max-height: 0 = contenuto nascosto (ma presente nel DOM)
    - overflow: hidden = impedisce al contenuto di "fuoriuscire"
    - transition = anima il cambio di max-height per effetto slide
    - Più performante di height auto (che non si può animare)
    */
}

/* ========================================
   STATO APERTO: RIVELA IL CONTENUTO
   ======================================== */
/* SELETTORE SIBLING: :checked ~ (tutti i fratelli successivi) */
.faq-light__toggle:checked ~ .faq-light__answer {
    max-height: 1000px; /* VALORE ALTO per permettere espansione completa */
    /*
    SPIEGAZIONE SELETTORE AVANZATO PER STUDENTI:
    - ~ = selettore "general sibling" (tutti i fratelli successivi)
    - Diverso da + che seleziona solo il fratello immediatamente successivo
    - Il DOM è: <input><label></label><div class="answer"></div>
    - Quando input è :checked, l'answer (fratello successivo) si apre
    
    NOTA SU MAX-HEIGHT:
    - Non possiamo animare da height: 0 a height: auto
    - Usiamo un valore fisso abbastanza alto (1000px)
    - Il contenuto non supererà mai questo limite
    - L'animazione sarà fluida grazie al transition
    */
}

/* ========================================
   CONTENUTO DELLA RISPOSTA
   ======================================== */
.faq-light__answer-content {
    padding: 1.5rem; /* Spazio interno per leggibilità */
    color: #4a4a4a; /* Colore più chiaro del testo domanda */
    line-height: 1.6; /* Spaziatura per leggibilità ottimale */
}

/* ========================================
   FORMATTAZIONE ELEMENTI DI TESTO
   ======================================== */
.faq-light__answer-content p {
    margin: 0 0 1rem 0; /* Spaziatura tra paragrafi */
}

.faq-light__answer-content p:last-child {
    margin-bottom: 0; /* Rimuove margin dall'ultimo paragrafo */
}

/* ========================================
   SUPPORTO PER LISTE
   ======================================== */
.faq-light__answer-content ul,
.faq-light__answer-content ol {
    margin: 1rem 0;
    padding-left: 1.5rem; /* Indentazione liste */
}

.faq-light__answer-content li {
    margin-bottom: 0.5rem; /* Spaziatura tra elementi lista */
}

/* ========================================
   FEEDBACK VISIVO DOMANDA ATTIVA
   ======================================== */
/* Cambia aspetto della domanda quando l'accordion è aperto */
.faq-light__toggle:checked + .faq-light__question {
    background-color: #f8f9fa; /* Evidenzia domanda attiva */
    /*
    SPIEGAZIONE PER STUDENTI:
    - Quando l'accordion è aperto (:checked)
    - La domanda rimane evidenziata visivamente
    - Feedback importante per indicare lo stato corrente
    */
}

/* ========================================
   ACCESSIBILITÀ: FOCUS MANAGEMENT
   ======================================== */
/* PSEUDO-CLASS AVANZATA: :focus-within */
.faq-light__question:focus-within {
    outline: 2px solid #007cba; /* Bordo focus visibile */
    outline-offset: -2px; /* Bordo interno per non spostare layout */
    background-color: #f0f6ff; /* Sfondo focus distintivo */
    /*
    SPIEGAZIONE ACCESSIBILITÀ PER STUDENTI:
    - :focus-within si attiva quando un elemento figlio ha il focus
    - Importante per navigazione da tastiera
    - L'utente può usare TAB per navigare tra accordion
    - SPACE o ENTER per attivare (funziona automaticamente con label+input)
    - Screen reader possono comprendere lo stato :checked
    
    ALTERNATIVA JAVASCRIPT-FREE:
    - Gli input nascosti mantengono il focus naturalmente
    - Le label sono automaticamente accessibili
    - Il browser gestisce tutto senza codice aggiuntivo!
    */
}

/* Varianti di stile */
.faq-light.is-style-minimal {
    background: none;
    box-shadow: none;
}

.faq-light.is-style-minimal .faq-light__container {
    border-top: none;
}

.faq-light.is-style-minimal .faq-light__item {
    border-bottom: 1px solid #e0e0e0;
    border-radius: 4px;
    margin-bottom: 0.5rem;
    background-color: #ffffff;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.faq-light.is-style-minimal .faq-light__item:last-child {
    border-bottom: 1px solid #e0e0e0;
}

/* Stile colorato */
.faq-light.is-style-colored .faq-light__question {
    background-color: #007cba;
    color: #ffffff;
}

.faq-light.is-style-colored .faq-light__question-text {
    color: #ffffff;
}

.faq-light.is-style-colored .faq-light__icon {
    background-color: rgba(255, 255, 255, 0.2);
    color: #ffffff;
}

.faq-light.is-style-colored .faq-light__question:hover {
    background-color: #005a87;
}

.faq-light.is-style-colored .faq-light__toggle:checked + .faq-light__question {
    background-color: #005a87;
}

/* Responsive Design */
@media (max-width: 768px) {
    .faq-light {
        margin: 1.5rem 0;
    }
    
    .faq-light__title {
        font-size: 1.5rem;
        padding: 1rem 1rem 0 1rem;
        margin-bottom: 1rem;
    }
    
    .faq-light__question {
        padding: 1rem;
    }
    
    .faq-light__question-text {
        font-size: 1rem;
        padding-right: 0.75rem;
    }
    
    .faq-light__icon {
        width: 1.75rem;
        height: 1.75rem;
    }
    
    .faq-light__icon::before {
        font-size: 1.25rem;
    }
    
    .faq-light__answer-content {
        padding: 0 1rem 1rem 1rem;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {
    .faq-light__question {
        padding: 0.75rem;
    }
    
    .faq-light__answer-content {
        padding: 0 0.75rem 0.75rem 0.75rem;
    }
}

/* Accessibilità - riduci animazioni se richiesto */
@media (prefers-reduced-motion: reduce) {
    .faq-light__answer,
    .faq-light__icon,
    .faq-light__question {
        transition: none;
    }
}
